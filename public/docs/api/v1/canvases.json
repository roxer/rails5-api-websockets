{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:3000//",
  "resourcePath": "canvases",
  "apis": [
    {
      "path": "api/v1/canvases.json",
      "operations": [
        {
          "summary": "Fetches all Canvases items",
          "notes": "This lists all canvases ...",
          "parameters": [
            {
              "paramType": "query",
              "name": "page",
              "type": "integer",
              "description": "Page number",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "Canvas",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "The request you made is not acceptable"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "Requested Range Not Satisfiable"
            }
          ],
          "method": "get",
          "nickname": "Api::V1::Canvases#index"
        }
      ]
    },
    {
      "path": "api/v1/canvases.json",
      "operations": [
        {
          "summary": "Creates a new Canvas",
          "notes": "TODO ...",
          "parameters": [
            {
              "paramType": "form",
              "name": "name",
              "type": "string",
              "description": "Name",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 201,
              "responseModel": "Canvas",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "method": "post",
          "nickname": "Api::V1::Canvases#create"
        }
      ]
    },
    {
      "path": "api/v1/canvases/{id}.json",
      "operations": [
        {
          "summary": "Fetches a single Canvas item",
          "notes": "TODO ...",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Canvas Id",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "Book",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "method": "get",
          "nickname": "Api::V1::Canvases#show"
        }
      ]
    },
    {
      "path": "api/v1/canvases/{id}.json",
      "operations": [
        {
          "summary": "Deletes an existing Canvas item",
          "notes": "TODO ...",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Canvas Id",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            }
          ],
          "method": "delete",
          "nickname": "Api::V1::Canvases#destroy"
        }
      ]
    }
  ],
  "models": {
    "Canvas": {
      "id": "Canvas",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Canvas Id"
        },
        "name": {
          "type": "string",
          "description": "Name"
        }
      },
      "description": "A Canvas object."
    }
  }
}
